{"version":3,"sources":["CSS/profileInfo.module.css","components/Profile/ProfileStatusWithHooks.js","components/Profile/ProfileDataForm.jsx","components/Profile/ProfileInfo.js","components/Profile/MyPosts.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","styles","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","error","onSubmit","formSummaryError","createField","Input","type","Textarea","Object","keys","profile","contacts","map","key","ProfileData","profileDataG","isOwner","profileData","onClick","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","saveProfile","Preloader","profileG","src","photos","large","userPhoto","mainPhoto","loadImage","target","files","length","savePhoto","initialValues","formData","then","MyPosts","React","memo","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","connect","state","profilePage","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.3da673c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPhoto\":\"profileInfo_mainPhoto__305F3\",\"loadImage\":\"profileInfo_loadImage__1xors\",\"profileG\":\"profileInfo_profileG__3JUNX\",\"status\":\"profileInfo_status__tPoNt\",\"profileDataG\":\"profileInfo_profileDataG__3z0uD\",\"profileData\":\"profileInfo_profileData__1-2Yv\"};","import React, {useState, useEffect} from 'react';\r\nimport styles from \"../../CSS/profileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n       setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode (false);\r\n        props.updateStatus(status);\r\n    }\r\n    return (\r\n        <div className={styles.status}>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}><b>Статус:</b>{props.status || \"------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../Common/FormControl/FormControl\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport styles from \"../Common/FormControl/FormControl.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, error, ...props}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>сохранить</button></div>\r\n        {error &&\r\n        <div className={styles.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <b>Имя:</b>{createField(\"Имя\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Ищу работу:</b>{createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b>Мои навыки:</b>{createField(\"Мои навыки\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Обо мне:</b>{createField(\"Расскажи о себе\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Контакты:</b> {Object.keys(props.profile.contacts).map(key => {\r\n            return <div key={key}>\r\n                <b>{key}:{createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form:'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport styles from '../../CSS/profileInfo.module.css';\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../assets/images/user_image.png';\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props, {saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if(!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n       if(e.target.files.length){\r\n           props.savePhoto(e.target.files[0]);\r\n       }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.profileG}>\r\n                <img src={props.profile.photos.large || userPhoto} className={styles.mainPhoto}/>\r\n                {props.isOwner && <input className={styles.loadImage} type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                {editMode ? <ProfileDataFormReduxForm initialValues={props.profile} {...props} onSubmit={onSubmit}/> : <ProfileData {...props} goToEditMode={() => {setEditMode(true)}}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileData = (props) => {\r\n    return <div className={styles.profileDataG}>\r\n        {props.isOwner && <div className={styles.profileData}><button onClick={props.goToEditMode}>редактировать</button></div>}\r\n        <div className={styles.profileData}>\r\n            <b>Имя:</b>{props.profile.fullName}\r\n        </div>\r\n        <div className={styles.profileData}>\r\n            <b>Ищу работу:</b>{props.profile.lookingForAJob ? \"да\" : \"нет\"}\r\n        </div>\r\n        {props.profile.lookingForAJob &&\r\n        <div className={styles.profileData}>\r\n            <b>Мои навыки:</b>{props.profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div className={styles.profileData}>\r\n            <b>Обо мне:</b>{props.profile.aboutMe}\r\n        </div>\r\n        <div className={styles.profileData}>\r\n            <b>Контакты:</b> {Object.keys(props.profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div>\r\n        <b>{contactTitle}:</b>{contactValue}\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\n\r\nconst MyPosts = React.memo ((props) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst Profile = (props) => (\r\n    <div>\r\n        <ProfileInfo\r\n            savePhoto={props.savePhoto}\r\n            isOwner={props.isOwner}\r\n            profile={props.profile}\r\n            status={props.status}\r\n            updateStatus={props.updateStatus}\r\n            saveProfile={props.saveProfile}\r\n        />\r\n        <MyPosts/>\r\n    </div>\r\n);\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/Profile-reducers\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}